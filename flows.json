[{"id":"551d8438.279b34","type":"tab","label":"Modbus","disabled":false,"info":"This flow demonstrates communicating with an EHS device via modbus."},{"id":"543fcc2c.685fbc","type":"inject","z":"551d8438.279b34","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"2","crontab":"","once":true,"onceDelay":"1","topic":"","payload":"","payloadType":"date","x":180,"y":180,"wires":[["f1e9a832.d27f58"]]},{"id":"f1e9a832.d27f58","type":"function","z":"551d8438.279b34","name":"poll pt100s","func":"function onClose(){\n    //node.send(msg)\n    flow.set('connected',false)\n}\n\nfunction onConnect(){\n    client.setID(1);\n    client.readHoldingRegisters(1998, 2).then(onRead,onError)\n}\n\nfunction onError(err){\n    node.error(err,msg);\n    msg.error=true;\n    node.send(msg);\n    client.close(onClose)\n    flow.set('connected',false)\n}\n\nfunction onRead(values){\n    msg.payload=values.data[0]\n    msg.payload2=values.data[1]\n    msg.error=false;\n    node.send(msg)\n    client.close(onClose)\n}\n\nfunction tryConnect(){\n    if(flow.get('connected')){\n        setTimeout(tryConnect,100);\n    }else{\n        flow.set('connected',true);\n       // open connection to a serial port\n        client.connectRTUBuffered(\"/dev/ttyUSB0\", { baudRate:19200,parity: 'even' }).then(onConnect,onError);\n        client.setTimeout(500); \n    }\n}\n\nvar ModbusRTU = global.get(\"modbusserial\");\nvar client = new ModbusRTU();\ntryConnect();\nreturn;","outputs":1,"noerr":0,"initialize":"","finalize":"// Code added here will be run when the\n// node is being stopped or re-deployed.\nclient.close(onClose)\n\nfunction onClose(){\n    \n}","libs":[],"x":470,"y":180,"wires":[["6d4c9612.dd6938"]]},{"id":"5e34cb89.ccaa8c","type":"function","z":"551d8438.279b34","name":"Write 2000 (display 1)","func":"function onError(err){\n    client.close(onClose)\n    node.error(err,msg);\n    flow.set('connected',false);\n}\n\nfunction onConnect(){\n    client.setID(1);\n    //client.close(onClose)\n    client.writeRegisters(2000, [msg.payload]).then(onWrite,onError)\n}\n\nfunction onWrite(values){\n    //msg.payload=values.data[0]\n    client.close(onClose)\n}\n\nfunction onClose(){\n    node.send(msg)\n    flow.set('connected',false);\n}\n\nfunction tryConnect(){\n    if(flow.get('connected')){\n        setTimeout(tryConnect,100);\n    }else{\n        flow.set('connected',true)\n       // open connection to a serial port\n        client.connectRTUBuffered(\"/dev/ttyUSB0\", { baudRate:19200,parity: 'even' }).then(onConnect,onError);\n        client.setTimeout(500); \n    }\n}\n\nvar ModbusRTU = global.get(\"modbusserial\");\nvar client = new ModbusRTU();\ntryConnect();\nreturn;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":440,"y":260,"wires":[[]]},{"id":"2e01ebb4.fa9ae4","type":"ui_gauge","z":"551d8438.279b34","name":"","group":"c2537264.3982","order":1,"width":0,"height":0,"gtype":"gage","title":"PT100_1","label":"units","format":"{{value}}","min":0,"max":"100","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","className":"","x":840,"y":120,"wires":[]},{"id":"554f116e.391b28","type":"ui_slider","z":"551d8438.279b34","name":"","label":"Fan threshold","tooltip":"","group":"83abfbc4.52086","order":1,"width":0,"height":0,"passthru":true,"outs":"end","topic":"topic","topicType":"msg","min":0,"max":"30","step":1,"className":"","x":220,"y":260,"wires":[["5e34cb89.ccaa8c"]]},{"id":"59725aba.d782e4","type":"ui_switch","z":"551d8438.279b34","name":"","label":"SSR 1 on/off","tooltip":"","group":"83abfbc4.52086","order":2,"width":0,"height":0,"passthru":true,"decouple":"false","topic":"topic","topicType":"msg","style":"","onvalue":"1","onvalueType":"num","onicon":"","oncolor":"","offvalue":"0","offvalueType":"num","officon":"","offcolor":"","animate":false,"className":"","x":190,"y":440,"wires":[["34cfbe63.c0356a"]]},{"id":"34cfbe63.c0356a","type":"function","z":"551d8438.279b34","name":"write 2002 (SSR 1)","func":"function onError(err){\n    client.close(onClose)\n    node.error(err,msg);\n    flow.set('connected',false);\n}\n\nfunction onConnect(){\n    client.setID(1);\n    //client.close(onClose)\n    client.writeRegisters(2002, [msg.payload]).then(onWrite,onError)\n}\n\nfunction onWrite(values){\n    //msg.payload=values.data[0]\n    client.close(onClose)\n}\n\nfunction onClose(){\n    node.send(msg)\n    flow.set('connected',false);\n}\n\nfunction tryConnect(){\n    if(flow.get('connected')){\n        setTimeout(tryConnect,100);\n    }else{\n        flow.set('connected',true)\n       // open connection to a serial port\n        client.connectRTUBuffered(\"/dev/ttyUSB0\", { baudRate:19200,parity: 'even' }).then(onConnect,onError);\n        client.setTimeout(500); \n    }\n}\n\nvar ModbusRTU = global.get(\"modbusserial\");\nvar client = new ModbusRTU();\ntryConnect();\nreturn;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":430,"y":440,"wires":[[]]},{"id":"ab612451.d91ac","type":"change","z":"551d8438.279b34","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload2","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":840,"y":180,"wires":[["c6fd8e3e.fbccc","c654158e.685ec8"]]},{"id":"c6fd8e3e.fbccc","type":"ui_gauge","z":"551d8438.279b34","name":"","group":"c2537264.3982","order":2,"width":0,"height":0,"gtype":"gage","title":"PT100_2","label":"units","format":"{{value}}","min":0,"max":"100","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","className":"","x":1040,"y":140,"wires":[]},{"id":"10c3b545.0d49ab","type":"ui_switch","z":"551d8438.279b34","name":"","label":"SSR 2 on/off","tooltip":"","group":"83abfbc4.52086","order":3,"width":0,"height":0,"passthru":true,"decouple":"false","topic":"topic","topicType":"msg","style":"","onvalue":"1","onvalueType":"num","onicon":"","oncolor":"","offvalue":"0","offvalueType":"num","officon":"","offcolor":"","animate":false,"className":"","x":190,"y":500,"wires":[["c8ffda0b.736f98"]]},{"id":"c8ffda0b.736f98","type":"function","z":"551d8438.279b34","name":"write 2003 (SSR 2)","func":"function onError(err){\n    client.close(onClose)\n    node.error(err,msg);\n    flow.set('connected',false);\n}\n\nfunction onConnect(){\n    client.setID(1);\n    //client.close(onClose)\n    client.writeRegisters(2003, [msg.payload]).then(onWrite,onError)\n}\n\nfunction onWrite(values){\n    //msg.payload=values.data[0]\n    client.close(onClose)\n}\n\nfunction onClose(){\n    node.send(msg)\n    flow.set('connected',false);\n}\n\nfunction tryConnect(){\n    if(flow.get('connected')){\n        setTimeout(tryConnect,100);\n    }else{\n        flow.set('connected',true)\n       // open connection to a serial port\n        client.connectRTUBuffered(\"/dev/ttyUSB0\", { baudRate:19200,parity: 'even' }).then(onConnect,onError);\n        client.setTimeout(500); \n    }\n}\n\nvar ModbusRTU = global.get(\"modbusserial\");\nvar client = new ModbusRTU();\ntryConnect();\nreturn;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":430,"y":500,"wires":[[]]},{"id":"4e23ba6a.e867ac","type":"ui_chart","z":"551d8438.279b34","name":"","group":"350ec790.d89f9","order":1,"width":0,"height":0,"label":"PT100_1 Last Hour","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"className":"","x":850,"y":60,"wires":[[]]},{"id":"c654158e.685ec8","type":"ui_chart","z":"551d8438.279b34","name":"","group":"350ec790.d89f9","order":2,"width":0,"height":0,"label":"PT100_2 Last Day","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"86400","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"className":"","x":1070,"y":180,"wires":[[]]},{"id":"6d4c9612.dd6938","type":"switch","z":"551d8438.279b34","name":"","property":"error","propertyType":"msg","rules":[{"t":"false"},{"t":"true"}],"checkall":"true","repair":false,"outputs":2,"x":660,"y":340,"wires":[["ab612451.d91ac","2e01ebb4.fa9ae4","4e23ba6a.e867ac","c5627bb8.975808"],["7d2c2529.098ffc"]]},{"id":"3ba768e7.3bc48","type":"ui_text","z":"551d8438.279b34","group":"83abfbc4.52086","order":3,"width":0,"height":0,"name":"","label":"Status","format":"{{msg.payload}}","layout":"row-spread","className":"","x":1090,"y":320,"wires":[]},{"id":"c5627bb8.975808","type":"change","z":"551d8438.279b34","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"Ok.","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":870,"y":320,"wires":[["3ba768e7.3bc48"]]},{"id":"7d2c2529.098ffc","type":"change","z":"551d8438.279b34","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"Modbus error.","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":880,"y":380,"wires":[["3ba768e7.3bc48"]]},{"id":"f7e6ebe3.ec0d9","type":"http request","z":"551d8438.279b34","name":"weather","method":"GET","ret":"obj","paytoqs":"ignore","url":"https://api.openweathermap.org/data/2.5/weather?q=sheffield,uk&appid=4b502bf9158cb9d95edf44a3638bf2f3&units=metric","tls":"","persist":false,"proxy":"","authType":"","x":260,"y":40,"wires":[["a07b46c5.d6a6a8"]]},{"id":"ec291c11.1cdd78","type":"inject","z":"551d8438.279b34","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"60","crontab":"","once":true,"onceDelay":"1","topic":"","payload":"","payloadType":"date","x":110,"y":40,"wires":[["f7e6ebe3.ec0d9"]]},{"id":"4a6059b2.02238","type":"ui_gauge","z":"551d8438.279b34","name":"","group":"c2537264.3982","order":2,"width":0,"height":0,"gtype":"gage","title":"Weather","label":"units","format":"{{value}}","min":0,"max":"30","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","className":"","x":660,"y":20,"wires":[]},{"id":"a07b46c5.d6a6a8","type":"change","z":"551d8438.279b34","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.main.temp","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":440,"y":40,"wires":[["4a6059b2.02238","17fcc295.c422d5"]]},{"id":"17fcc295.c422d5","type":"function","z":"551d8438.279b34","name":"write 2004,2005 (display 2)","func":"function onError(err){\n    client.close(onClose)\n    node.error(err,msg);\n    flow.set('connected',false);\n}\n\nfunction onConnect(){\n    client.setID(1);\n    //client.close(onClose)\n    var whole=parseInt(msg.payload);\n    var part=parseInt((msg.payload-whole)*10);\n    client.writeRegisters(2003, [whole,part]).then(onWrite,onError)\n}\n\nfunction onWrite(values){\n    //msg.payload=values.data[0]\n    client.close(onClose)\n}\n\nfunction onClose(){\n    node.send(msg)\n    flow.set('connected',false);\n}\n\nfunction tryConnect(){\n    if(flow.get('connected')){\n        setTimeout(tryConnect,100);\n    }else{\n        flow.set('connected',true)\n       // open connection to a serial port\n        client.connectRTUBuffered(\"/dev/ttyUSB0\", { baudRate:19200,parity: 'even' }).then(onConnect,onError);\n        client.setTimeout(500); \n    }\n}\n\nvar ModbusRTU = global.get(\"modbusserial\");\nvar client = new ModbusRTU();\ntryConnect();\nreturn;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":100,"wires":[[]]},{"id":"c2537264.3982","type":"ui_group","name":"Readings","tab":"12523721.daaef1","order":2,"disp":true,"width":"6","collapse":false,"className":""},{"id":"83abfbc4.52086","type":"ui_group","name":"Controls","tab":"12523721.daaef1","order":1,"disp":true,"width":"6","collapse":false,"className":""},{"id":"350ec790.d89f9","type":"ui_group","name":"History","tab":"12523721.daaef1","order":3,"disp":true,"width":"6","collapse":false,"className":""},{"id":"12523721.daaef1","type":"ui_tab","name":"INX Node-RED Modbus Demonstration","icon":"dashboard","disabled":false,"hidden":true}]